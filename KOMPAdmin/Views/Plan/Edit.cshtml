@model KOMPAdmin.Models.PlanModel

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Update Plan</h1>



        </div>
        <!-- /.col-lg-12 -->
    </div>

    <div class="row">
        <a href="@Url.Action("Index","Plan")" class="btn btn-default"><i class="fa fa-list"></i> List of plans</a>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model=> model.Id)
            <div class="form-inline">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-xs-4 col-md-4">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-xs-4 col-md-4">
                    @Html.LabelFor(model => model.DaysInPlan, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.DaysInPlan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DaysInPlan, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-xs-4 col-md-4">
                    @Html.LabelFor(model => model.ValidUpTo, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ValidUpTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ValidUpTo, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-4 col-md-4">
                    @Html.LabelFor(model => model.DeliveryCharges, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DeliveryCharges, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeliveryCharges, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-4 col-md-4">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-4 col-md-4">
                    @Html.LabelFor(model => model.NightDeliveryCharges, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NightDeliveryCharges, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NightDeliveryCharges, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-xs-4 col-md-4">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="pull-right">
                        <button type="submit" class="btn btn-primary"><i class="fa fa-save"></i> Save</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")